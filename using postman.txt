<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.6-SNAPSHOT</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>Secondspring</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Secondspring</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>11</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

</project>
---------------------------------------------------------------------------------------------------------------------
//SecondSpringAppli

package com.example.Secondspring;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class SecondspringApplication {

	public static void main(String[] args) {
		SpringApplication.run(SecondspringApplication.class, args);
	}

}
--------------------------------------------------------------------------------------------------
//JdbcAppli
package com.example.Secondspring;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

    @SpringBootApplication
    public class jdbcAppli{

        public static void main(String[] args) {
            SpringApplication.run(jdbcAppli.class, args);
        }

    }
-----------------------------------------------------------------------------------------------------------------------
//Login
package com.example.Secondspring;

public class Login {
    String username;
    String password;

    public String  getUsername(){
        return username;
    }

    public void  setUsername(String username) {
        this.username = username;

    }
    public String  getPassword(){
        return password;
    }

    public void setPassword(String password){
        this.password=password;
    }

}

------------------------------------------------------------------------------------------------------------------------
//Controllers

package com.example.Secondspring;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
public class Controllers {
    @Autowired
    Demo demo;

    @GetMapping(value = "/studentname")
    public String studentname() {
        return "studentname";
    }

    @GetMapping(value = "studentnames")
    public List<String> studentnames() {
        return demo.getAllStudentNames();
    }
   --------------------------------------------------------------------------------------------------------------------------------
  //Demo
  package com.example.Secondspring;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;
import org.springframework.web.bind.annotation.PostMapping;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;

@Repository
public class Demo {
    @Autowired
    JdbcTemplate jdbcTemplate;

    public List<String> getAllStudentNames(){
        List<String> names=new ArrayList<>();
        names.addAll(jdbcTemplate.queryForList("select name from student",String.class));
        return names;
    }
}


------------------------------------------------------------------------------------------------------------------------------------
//appli properties

#Database Configuration info
#url,username,pass,lass name
server.port=9091
spring.datasource.url=jdbc:mysql://localhost:3306/demo
spring.datasource.userName=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
-------------------------------------------------------------------------------
